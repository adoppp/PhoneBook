{"version":3,"file":"static/js/849.e68430c6.chunk.js","mappings":"uMAEaA,EAAQ,SAAHC,GAAqB,IAAhBC,EAASD,EAATC,UACnB,OACIC,EAAAA,EAAAA,KAAA,OAAAC,SACKC,IAAAA,OAAAA,QAAwBH,IAGrC,C,mICPA,EAAuB,yBAAvB,EAA4D,8BAA5D,EAAkG,0BAAlG,EAAqI,2BAArI,EAAwK,0B,SCM3JI,EAAa,WACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MA8BjB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcV,SAAA,EAC1BQ,EAAAA,EAAAA,MAAA,QAAMG,SA9BO,SAAAC,GACjBA,EAAEC,iBAEF,IAIMC,EAAW,CACbC,KALSH,EAAEI,cAAcC,SAASC,SAASC,MAM3CC,MALUR,EAAEI,cAAcC,SAASI,UAAUF,MAM7CG,SALaV,EAAEI,cAAcC,SAASM,aAAaJ,OAQjC,KAAlBL,EAASC,KAGiB,KAAnBD,EAASM,MAGa,KAAtBN,EAASQ,UAKpBhB,GAASkB,EAAAA,EAAAA,IAAmBV,IAC5BF,EAAEa,OAAOC,SALLzB,IAAAA,OAAAA,QAAwB,qBAHxBA,IAAAA,OAAAA,QAAwB,kBAHxBA,IAAAA,OAAAA,QAAwB,gBAYhC,EAIsCQ,UAAWC,EAASV,SAAA,EAC9CD,EAAAA,EAAAA,KAAA,MAAIU,UAAWC,EAAUV,SAAC,uBAC1BD,EAAAA,EAAAA,KAAA,SAAO4B,KAAK,OAAOZ,KAAK,WAAWN,UAAWC,EAAWkB,YAAY,UACrE7B,EAAAA,EAAAA,KAAA,SAAO4B,KAAK,QAAQZ,KAAK,YAAYN,UAAWC,EAAWkB,YAAY,YACvE7B,EAAAA,EAAAA,KAAA,SAAO4B,KAAK,WAAWZ,KAAK,eAAeN,UAAWC,EAAWkB,YAAY,cAC7E7B,EAAAA,EAAAA,KAAA,UAAQ4B,KAAK,SAASlB,UAAWC,EAAWV,SAAC,eAEhDG,IAAWJ,EAAAA,EAAAA,KAACH,EAAAA,EAAK,CAACE,UAAWK,MAG1C,EC7CA,EAJe,WACX,OAAOJ,EAAAA,EAAAA,KAACG,EAAU,GACtB,C","sources":["components/Error/Error.jsx","webpack://react-homework-template/./src/components/SignUpForm/SignUpForm.module.css?655f","components/SignUpForm/SignUpForm.jsx","pages/registration/Registration.jsx"],"sourcesContent":["import Notiflix from \"notiflix\"\n\nexport const Error = ({errorText}) => {\n    return (\n        <div>\n            {Notiflix.Notify.failure(errorText)}\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUpForm_form__OYKon\",\"container\":\"SignUpForm_container__WR9Wv\",\"input\":\"SignUpForm_input__2jKXC\",\"button\":\"SignUpForm_button__RIhAk\",\"title\":\"SignUpForm_title__rBa0C\"};","import Notiflix from \"notiflix\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { regisrtrationThunk } from \"redux/operations/authThunk\";\nimport { errorUserSelector } from \"redux/selectors/selectors\";\nimport { Error } from \"components/Error/Error\";\nimport css from './SignUpForm.module.css';\n\nexport const SignUpForm = () => {\n    const error = useSelector(errorUserSelector);\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const name = e.currentTarget.elements.userName.value;\n        const email = e.currentTarget.elements.userEmail.value;\n        const password = e.currentTarget.elements.userPassword.value;\n\n        const formData = {\n            name,\n            email,\n            password,\n        }\n\n        if (formData.name === '') {\n            Notiflix.Notify.warning(\"Enter a name!\")\n            return;\n        } else if (formData.email === '') {\n            Notiflix.Notify.warning(\"Enter a email!\")\n            return;\n        } else if (formData.password === '') {\n            Notiflix.Notify.warning(\"Enter a password!\")\n            return;\n        } \n\n        dispatch(regisrtrationThunk(formData))\n        e.target.reset(); \n    };\n\n    return(\n        <div className={css.container}>\n            <form onSubmit={handleSubmit} className={css.form}>\n                <h1 className={css.title}>Registration form</h1>\n                <input type=\"text\" name=\"userName\" className={css.input} placeholder=\"Name\"/>\n                <input type=\"email\" name=\"userEmail\" className={css.input} placeholder=\"Email*\"/>\n                <input type=\"password\" name=\"userPassword\" className={css.input} placeholder=\"Password\"/>\n                <button type=\"submit\" className={css.button}>Sign up</button>\n            </form>\n            {error && ( <Error errorText={error} /> )}\n        </div>\n    )\n}","import { SignUpForm } from \"components/SignUpForm/SignUpForm\"\n\nconst Signup = () => {\n    return <SignUpForm />;\n}\n\nexport default Signup;"],"names":["Error","_ref","errorText","_jsx","children","Notiflix","SignUpForm","error","useSelector","errorUserSelector","dispatch","useDispatch","_jsxs","className","css","onSubmit","e","preventDefault","formData","name","currentTarget","elements","userName","value","email","userEmail","password","userPassword","regisrtrationThunk","target","reset","type","placeholder"],"sourceRoot":""}