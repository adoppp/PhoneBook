{"version":3,"file":"static/js/352.41420147.chunk.js","mappings":"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","sources":["redux/selectors/selectors.js","components/Error/Error.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/form.jsx","webpack://react-homework-template/./src/components/ContactList/ContactItem/ContactItem.module.css?7ce2","components/ContactList/ContactItem/ContatcItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/contacts/Contacts.module.css?40b9","webpack://react-homework-template/./src/components/Total/Total.module.css?64c9","components/Total/Total.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["export const contactsSelector = state => state.contacts.items;\n\nexport const isLoadingSelector = state => state.contacts.isLoading;\n\nexport const errorSelector = state => state.contacts.error;\n\nexport const filterSelector = state => state.filter.filter;","import Notiflix from \"notiflix\"\n\nexport const Error = ({errorText}) => {\n    return (\n        <div>\n            {Notiflix.Notify.failure(errorText)}\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"button\":\"Form_button__8NOIT\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Form.module.css';\n\nexport const ContactForm = ({onAddContact}) => {\n  const [contact, setContact] = useState({name: '', number: '',})\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const name = contact.name;\n    const number = contact.number;\n\n    onAddContact({ name, number });\n\n    setContact({name: '', number: '',})\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setContact((contact) => {\n      return {...contact, [name]: value}\n    });\n  };\n\n\n    return (\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            //required\n            value={contact.name}\n            onChange={handleChange}\n            className={css.input}\n            placeholder='Name'\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            //required\n            value={contact.number}\n            onChange={handleChange}\n            className={css.input}\n            placeholder='Number'\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>Add contact</button>\n      </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__pER5Q\",\"button\":\"ContactItem_button__3O59k\"};","import PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={css.item}>\n      <span>{contact.name}</span>\n      <span> {contact.number}</span>\n      <button onClick={() => onDeleteContact(contact.id)} className={css.button} >Delete</button>\n    </li>\n  );\n};\n\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import PropTypes from 'prop-types';\nimport { ContactItem } from './ContactItem/ContatcItem';\nimport css from './ContactList.module.css';\n\nexport const ContactList = ({ contacts, onDeleteContact, filter }) => {\n\n  const filterContact = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n\n  const contactElem = filterContact.map(contact => <ContactItem\n    key={contact.id}\n    contact={contact}\n    onDeleteContact={onDeleteContact}\n  />);\n  \n  return (\n    <ul className={css.list}>\n      {contactElem}\n    </ul>\n  );\n};\n\n\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nexport const Filter = ({ onFilter }) => {\n  \n  const handleFilter = e => {\n    const inputValue = e.target.value\n    onFilter(inputValue)\n  }\n\n    return (\n      <label className={css.label}>\n        Find contacts by name\n        <input type=\"text\" onChange={handleFilter} className={css.input} placeholder='Name' />\n      </label>\n    );\n}\n\nFilter.propTypes = {\n    onFilter: PropTypes.func.isRequired,\n    filter: PropTypes.string,\n  };","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__+hGpO\",\"title\":\"Contacts_title__IpHdg\",\"titleh2\":\"Contacts_titleh2__ci+mk\"};","// extracted by mini-css-extract-plugin\nexport default {\"span\":\"Total_span__fDND7\",\"number\":\"Total_number__PF8qY\"};","import css from './Total.module.css';\n\nexport const Total = ({ contacts }) => {\n    return (\n        <span className={css.span}>Total contacts: <span className={css.number}>{contacts.length}</span></span>\n    )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelector, errorSelector, filterSelector, isLoadingSelector } from 'redux/selectors/selectors';\nimport { makeFilter } from 'redux/redusers/filterSlice';\nimport { fetchContacts, addContact, deleteContact } from 'redux/operations/contactsThunk';\nimport Notiflix from 'notiflix';\n\nimport { Loader } from '../../components/Loader/Loader';\nimport { Error } from '../../components/Error/Error';\nimport { ContactForm } from '../../components/Form/form';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport css from './Contacts.module.css';\nimport { Total } from '../../components/Total/Total';\n\nconst Contacts = () => {\n  const contacts = useSelector(contactsSelector);\n  const filter = useSelector(filterSelector);\n  const isLoading = useSelector(isLoadingSelector);\n  const error = useSelector(errorSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch]);\n\n  const handleAddContact = contact => {\n    const { name, number } = contact;\n\n\n    if (contacts.find(contact => contact.name === name)) {\n      Notiflix.Notify.warning(`${name} is already in the phonebook.`)\n      return;\n    } else if (contacts.find(contact => contact.number === number)) {\n      Notiflix.Notify.warning(`${number} is already in the phonebook.`)\n      return;\n    } else if (name.trim() === '' || number.trim() === '') {\n      Notiflix.Notify.info('Please, enter name and number!')\n      return;\n    }\n\n    dispatch(addContact(contact))\n\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id))\n  };\n\n\n  const handleFilter = e => {\n    dispatch(makeFilter(e))\n  };\n\n  return (\n    <section>\n    <div className={css.container}>\n      <h1 className={css.title}>Phonebook</h1>\n      <ContactForm onAddContact={handleAddContact} />\n      <h2 className={css.titleh2}>Contacts</h2>\n      <Total contacts={contacts}/>\n      <Filter onFilter={handleFilter} />\n      {isLoading ? \n      <Loader /> : \n      <ContactList\n        contacts={contacts}\n        onDeleteContact={handleDeleteContact}\n        filter={filter}\n      />\n      }\n      {error && (<Error errorText={`Something went wrong... ${error}. Please try again.`} />)}\n    </div>\n    </section>\n  )\n}\n\nexport default Contacts;"],"names":["contactsSelector","state","contacts","items","isLoadingSelector","isLoading","errorSelector","error","filterSelector","filter","Error","_ref","errorText","_jsx","children","Notiflix","ContactForm","onAddContact","_useState","useState","name","number","_useState2","_slicedToArray","contact","setContact","handleChange","e","_e$target","target","value","_objectSpread","_defineProperty","_jsxs","onSubmit","preventDefault","className","css","type","pattern","title","onChange","placeholder","ContactItem","onDeleteContact","onClick","id","ContactList","contactElem","toLowerCase","includes","trim","map","Filter","onFilter","inputValue","Total","length","useSelector","dispatch","useDispatch","useEffect","fetchContacts","find","concat","addContact","makeFilter","Loader","deleteContact"],"sourceRoot":""}